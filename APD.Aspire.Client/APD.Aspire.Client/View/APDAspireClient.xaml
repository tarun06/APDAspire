<Window x:Class="APD.Aspire.Client.APDAspireClient"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:APD.Aspire.Client"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Aspire Client" Height="350" Width="700">
    <Window.Resources>
        <local:ListToStringConverter x:Key="ListToStringConverter"/>
        <ObjectDataProvider x:Key="ApiCommand" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:APICommand"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!--<Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="Control.Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>-->
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="26"/>
            <RowDefinition Height="2"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" HorizontalAlignment="Left" Orientation="Horizontal" Grid.Row="0" Margin="2">
                <ComboBox Name="CmbCommand" Height="27" Width="100"
                          VerticalAlignment="Center" HorizontalAlignment="Center"
                          ItemsSource="{Binding Source={StaticResource ApiCommand}}"/>
                <Separator Width="5" Background="Transparent" />
                <Button Content="Execute" Height="27" Width="100"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Command="{Binding ExecuteCommand}" CommandParameter="{Binding ElementName=CmbCommand,Path=SelectedItem}"></Button>
            </StackPanel>
            <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" Grid.Row="0" Margin="2">
                <TextBox Name="txtSearchBox" 
                         Height="27" Width="100"
                         VerticalAlignment="Center" HorizontalAlignment="Center"
                         Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"></TextBox>
                <Separator Width="5" Background="Transparent" />
                <Button Content="Find"
                        Height="27" Width="100"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Command="{Binding SearchCommand, UpdateSourceTrigger=PropertyChanged}"></Button>
            </StackPanel>
        </Grid>

        <DataGrid Margin="2" Grid.Row="2" SelectionMode="Single" ItemsSource="{Binding Contacts, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AutoGenerateColumns="False"  CanUserResizeColumns="True">
            <DataGrid.Columns>
                <DataGridTemplateColumn >
                    <DataGridTemplateColumn.Header>
                        <CheckBox  Name="chkSelectAll" IsChecked="{Binding DataContext.SelectAll, 
                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, 
                            UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked" >
                                    <i:InvokeCommandAction 
                                         Command="{Binding DataContext.SelectAllCommand, 
                                              RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                              CommandParameter="{Binding ElementName=chkSelectAll, Path=IsChecked}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked" >
                                    <i:InvokeCommandAction 
                                        Command="{Binding DataContext.SelectAllCommand, 
                                              RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                              CommandParameter="{Binding ElementName=chkSelectAll, Path=IsChecked}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox  HorizontalAlignment="Center" VerticalAlignment="Center"  
                                       IsChecked="{Binding IsChecked,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn IsReadOnly="True"   Header="Object ID"  Binding="{Binding Path=Contact_Id, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <DataGridTextColumn  Header="First Name" Binding="{Binding Path=FirstName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <DataGridTextColumn  Header="Last Name" Binding="{Binding Path=LastName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <DataGridTemplateColumn Header="Date of birth">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker HorizontalAlignment="Center" VerticalAlignment="Center"  SelectedDate="{Binding Path=DOB, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="*"  Header="Phone Number" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox TextWrapping="Wrap" Text="{Binding PhoneNumber, Converter={StaticResource ListToStringConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    
                </DataGridTemplateColumn>

                <DataGridTemplateColumn  Width="*" Header="Email Id" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox TextWrapping="Wrap" Text="{Binding EmailId, Converter={StaticResource ListToStringConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <TextBlock Grid.Row="3" 
                   Text="{Binding StatusMessage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, FallbackValue=Status :}"
                   HorizontalAlignment="Left" VerticalAlignment="Center"/>
    </Grid>
</Window>
